error: `~const` is not allowed here
  --> $DIR/super-traits-fail-2.rs:10:12
   |
LL | trait Bar: ~const Foo {}
   |            ^^^^^^
   |
note: this trait is not a `#[const_trait]`, so it cannot have `~const` trait bounds
  --> $DIR/super-traits-fail-2.rs:10:1
   |
LL | trait Bar: ~const Foo {}
   | ^^^^^^^^^^^^^^^^^^^^^^^^

warning: the feature `effects` is incomplete and may not be safe to use and/or cause compiler crashes
  --> $DIR/super-traits-fail-2.rs:1:30
   |
LL | #![feature(const_trait_impl, effects)]
   |                              ^^^^^^^
   |
   = note: see issue #102090 <https://github.com/rust-lang/rust/issues/102090> for more information
   = note: `#[warn(incomplete_features)]` on by default

error[E0277]: the trait bound `Foo::{synthetic#0}: ~const Compat` is not satisfied
  --> $DIR/super-traits-fail-2.rs:17:7
   |
LL |     x.a();
   |       ^ the trait `~const Compat` is not implemented for `Foo::{synthetic#0}`
   |
note: required by a bound in `Foo::a`
  --> $DIR/super-traits-fail-2.rs:4:25
   |
LL | #[cfg_attr(any(yy, yn), const_trait)]
   |                         ^^^^^^^^^^^ required by this bound in `Foo::a`
LL | trait Foo {
LL |     fn a(&self);
   |        - required by a bound in this associated function
help: consider further restricting the associated type
   |
LL | const fn foo<T: Bar>(x: &T) where Foo::{synthetic#0}: ~const Compat {
   |                             +++++++++++++++++++++++++++++++++++++++

error: aborting due to 2 previous errors; 1 warning emitted

For more information about this error, try `rustc --explain E0277`.
