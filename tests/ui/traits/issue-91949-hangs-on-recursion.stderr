warning: function cannot return without recursing
  --> $DIR/issue-91949-hangs-on-recursion.rs:20:1
   |
LL | / fn recurse<T>(elements: T) -> Vec<char>
LL | |
LL | | where
LL | |     T: Iterator<Item = ()>,
   | |___________________________^ cannot return without recursing
LL |   {
LL |       recurse(IteratorOfWrapped(elements).map(|t| t.0))
   |       ------------------------------------------------- recursive call site
   |
   = help: a `loop` may express intention better if this is on purpose
   = note: `#[warn(unconditional_recursion)]` on by default

error: reached the type-length limit while instantiating `<IteratorOfWrapped<(), Map<IteratorOfWrapped<(), ...>, ...>> as Iterator>::map::<..., ...>`
  --> $DIR/issue-91949-hangs-on-recursion.rs:25:13
   |
LL |     recurse(IteratorOfWrapped(elements).map(|t| t.0))
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a `#![type_length_limit="27262965"]` attribute to your crate
   = note: the full type name has been written to '$TEST_BUILD_DIR/traits/issue-91949-hangs-on-recursion/issue-91949-hangs-on-recursion.long-type.txt'

error: aborting due to 1 previous error; 1 warning emitted

