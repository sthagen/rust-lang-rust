error[E0597]: `mutex` does not live long enough
  --> $DIR/span-semicolon-issue-139049.rs:39:27
   |
LL |         let mutex = Mutex;
   |             ----- binding `mutex` declared here
LL |         write!(Out, "{}", mutex.lock())
   |                           ^^^^^-------
   |                           |
   |                           borrowed value does not live long enough
   |                           a temporary with access to the borrow is created here ...
...
LL |     };
   |     -- ... and the borrow might be used here, when that temporary is dropped and runs the `Drop` code for type `MutexGuard`
   |     |
   |     `mutex` dropped here while still borrowed
   |
help: consider adding semicolon after the expression so its temporaries are dropped sooner, before the local variables declared by the block are dropped
   |
LL |         write!(Out, "{}", mutex.lock());
   |                                        +

error[E0597]: `mutex` does not live long enough
  --> $DIR/span-semicolon-issue-139049.rs:48:41
   |
LL |         let mutex = Mutex;
   |             ----- binding `mutex` declared here
LL |         write!(std::io::stdout(), "{}", mutex.lock())
   |                                         ^^^^^-------
   |                                         |
   |                                         borrowed value does not live long enough
   |                                         a temporary with access to the borrow is created here ...
...
LL |     };
   |     -- ... and the borrow might be used here, when that temporary is dropped and runs the `Drop` code for type `MutexGuard`
   |     |
   |     `mutex` dropped here while still borrowed
   |
   = note: the temporary is part of an expression at the end of a block;
           consider forcing this temporary to be dropped sooner, before the block's local variables are dropped
help: for example, you could save the expression's value in a new local variable `x` and then make `x` be the expression at the end of the block
   |
LL |         let x = write!(std::io::stdout(), "{}", mutex.lock()); x
   |         +++++++                                              +++

error: aborting due to 2 previous errors

For more information about this error, try `rustc --explain E0597`.
