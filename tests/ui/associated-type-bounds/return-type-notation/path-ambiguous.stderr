warning: the feature `return_type_notation` is incomplete and may not be safe to use and/or cause compiler crashes
  --> $DIR/path-ambiguous.rs:1:12
   |
LL | #![feature(return_type_notation)]
   |            ^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #109417 <https://github.com/rust-lang/rust/issues/109417> for more information
   = note: `#[warn(incomplete_features)]` on by default

error[E0221]: ambiguous associated function `method` in bounds of `T`
  --> $DIR/path-ambiguous.rs:13:5
   |
LL |     fn method() -> impl Sized;
   |     -------------------------- ambiguous `method` from `A`
...
LL |     fn method() -> impl Sized;
   |     -------------------------- ambiguous `method` from `B`
...
LL |     T::method(..): Send,
   |     ^^^^^^^^^^^^^ ambiguous associated function `method`
   |
help: use fully-qualified syntax to disambiguate
   |
LL |     <T as B>::method(..): Send,
   |     ~~~~~~~~~~
help: use fully-qualified syntax to disambiguate
   |
LL |     <T as A>::method(..): Send,
   |     ~~~~~~~~~~

error[E0221]: ambiguous associated function `method` in bounds of `T`
  --> $DIR/path-ambiguous.rs:22:5
   |
LL |     fn method() -> impl Sized;
   |     -------------------------- ambiguous `method` from `A`
...
LL |     fn method() -> impl Sized;
   |     -------------------------- ambiguous `method` from `B`
...
LL |     T::method(..): Send,
   |     ^^^^^^^^^^^^^ ambiguous associated function `method`
   |
help: use fully-qualified syntax to disambiguate
   |
LL |     <T as B>::method(..): Send,
   |     ~~~~~~~~~~
help: use fully-qualified syntax to disambiguate
   |
LL |     <T as A>::method(..): Send,
   |     ~~~~~~~~~~

error: aborting due to 2 previous errors; 1 warning emitted

For more information about this error, try `rustc --explain E0221`.
